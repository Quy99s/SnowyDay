{"version":3,"sources":["file:///Users/backup/SnowyDay/SnowyDay/assets/Script/Player.ts"],"names":["_decorator","Component","Node","ParticleSystem2D","RigidBody2D","Vec2","ccclass","property","Player","onLoad","node","on","fireToPosition","runSkill","position","force","fireBullet","applyForceToTarget","callBack","bullet","setPosition","getPosition","getComponent","resetSystem","active","reset","stopSystem","target","nodePos","currentPos","x","y","currentAngle","Math","atan2","PI","cos","sin","linearVelocity","applyForceToCenter","event","skill","emit"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAuBC,MAAAA,gB,OAAAA,gB;AAAkBC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;;;;;;;OAChF;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;wBAGjBQ,M,WADZF,OAAO,CAAC,QAAD,C,UAGHC,QAAQ,CAACL,IAAD,C,UAERK,QAAQ,CAACL,IAAD,C,oCALb,MACaM,MADb,SAC4BP,SAD5B,CACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AASlCQ,QAAAA,MAAM,GAAG;AACL,eAAKC,IAAL,CAAUC,EAAV,CAAa,aAAb,EAA4B,KAAKC,cAAjC,EAAiD,IAAjD;AACA,eAAKF,IAAL,CAAUC,EAAV,CAAa,WAAb,EAA0B,KAAKE,QAA/B,EAAyC,IAAzC;AACH;;AAEDD,QAAAA,cAAc,CAACE,QAAD,EAAWC,KAAX,EAAkB;AAC5B,eAAKC,UAAL,CAAgBF,QAAhB;AACA,eAAKG,kBAAL,CAAwB,KAAKP,IAA7B,EAAmCI,QAAnC,EAA6CC,KAA7C;AACH;;AAEDC,QAAAA,UAAU,CAACF,QAAD,EAAWI,QAAQ,GAAG,IAAtB,EAA4B;AAClC,eAAKC,MAAL,CAAYC,WAAZ,CAAwB,KAAKV,IAAL,CAAUW,WAAV,EAAxB;AACA,eAAKF,MAAL,CAAYG,YAAZ,CAAyBnB,gBAAzB,EAA2CoB,WAA3C;AACA,eAAKJ,MAAL,CAAYK,MAAZ,GAAqB,IAArB;AACA,eAAKP,kBAAL,CAAwB,KAAKE,MAA7B,EAAqCL,QAArC,EAA+C,CAAC,CAAhD;AAEH;;AACDW,QAAAA,KAAK,GAAG;AACJ,eAAKN,MAAL,CAAYG,YAAZ,CAAyBnB,gBAAzB,EAA2CoB,WAA3C;AACA,eAAKJ,MAAL,CAAYG,YAAZ,CAAyBnB,gBAAzB,EAA2CuB,UAA3C;AACH;;AAEDT,QAAAA,kBAAkB,CAACU,MAAD,EAASb,QAAT,EAAmBC,KAAnB,EAA0B;AACxC,gBAAMa,OAAO,GAAG,KAAKlB,IAAL,CAAUW,WAAV,EAAhB;AACA,gBAAMQ,UAAU,GAAG,IAAIxB,IAAJ,CAASuB,OAAO,CAACE,CAAR,GAAYhB,QAAQ,CAACgB,CAA9B,EAAiCF,OAAO,CAACG,CAAR,GAAYjB,QAAQ,CAACiB,CAAtD,CAAnB;AACA,gBAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAU,CAACE,CAAtB,EAAyBF,UAAU,CAACC,CAApC,IAAyC,GAAzC,GAA+CG,IAAI,CAACE,EAAzE;AACA,gBAAML,CAAC,GAAGf,KAAK,GAAGkB,IAAI,CAACG,GAAL,CAAUJ,YAAY,GAAGC,IAAI,CAACE,EAArB,GAA2B,GAApC,CAAlB;AACA,gBAAMJ,CAAC,GAAGhB,KAAK,GAAGkB,IAAI,CAACI,GAAL,CAAUL,YAAY,GAAGC,IAAI,CAACE,EAArB,GAA2B,GAApC,CAAlB;AAEAR,UAAAA,MAAM,CAACL,YAAP,CAAoBlB,WAApB,EAAiCkC,cAAjC,GAAkD,IAAIjC,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAAlD;AACAsB,UAAAA,MAAM,CAACL,YAAP,CAAoBlB,WAApB,EAAiCmC,kBAAjC,CAAoD,IAAIlC,IAAJ,CAASyB,CAAT,EAAYC,CAAZ,CAApD,EAAoE,IAApE;AACH;;AAEDlB,QAAAA,QAAQ,CAAC2B,KAAD,EAAQ;AACZ,eAAKC,KAAL,CAAWC,IAAX,CAAgB,QAAhB;AACH;;AA5CiC,O","sourcesContent":["\nimport { _decorator, Component, Node, tween, v3, Vec3, ParticleSystem2D, RigidBody2D, Vec2, UITransform } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Player')\nexport class Player extends Component {\n\n    @property(Node)\n    bullet: Node;\n    @property(Node)\n    skill: Node;\n    tweenMove: any;\n    rigidBody: RigidBody2D;\n\n    onLoad() {\n        this.node.on(\"FIRE_TO_POS\", this.fireToPosition, this);\n        this.node.on('SENT_GIFT', this.runSkill, this);\n    }\n\n    fireToPosition(position, force) {\n        this.fireBullet(position);\n        this.applyForceToTarget(this.node, position, force)\n    }\n\n    fireBullet(position, callBack = null) {\n        this.bullet.setPosition(this.node.getPosition());\n        this.bullet.getComponent(ParticleSystem2D).resetSystem();\n        this.bullet.active = true;\n        this.applyForceToTarget(this.bullet, position, -1);\n\n    }\n    reset() {\n        this.bullet.getComponent(ParticleSystem2D).resetSystem();\n        this.bullet.getComponent(ParticleSystem2D).stopSystem();\n    }\n\n    applyForceToTarget(target, position, force) {\n        const nodePos = this.node.getPosition();\n        const currentPos = new Vec2(nodePos.x - position.x, nodePos.y - position.y);\n        const currentAngle = Math.atan2(currentPos.y, currentPos.x) * 180 / Math.PI;\n        const x = force * Math.cos((currentAngle * Math.PI) / 180);\n        const y = force * Math.sin((currentAngle * Math.PI) / 180);\n\n        target.getComponent(RigidBody2D).linearVelocity = new Vec2(0, 0);\n        target.getComponent(RigidBody2D).applyForceToCenter(new Vec2(x, y), true);\n    }\n\n    runSkill(event) {\n        this.skill.emit('ATTACK');\n    }\n}\n"]}