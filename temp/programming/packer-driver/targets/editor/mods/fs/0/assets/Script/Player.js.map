{"version":3,"sources":["file:///Users/backup/Desktop/SnowyDay/assets/Script/Player.ts"],"names":["_decorator","Component","PhysicsSystem2D","Vec3","CCInteger","RigidBody2D","SystemEventType","misc","Vec2","SpeedType","instance","ccclass","property","enable","Player","displayName","tooltip","type","onLoad","rigidbody","_body","node","getComponent","on","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","event","data","_speedType","speedType","moveDir","moveVec","onSetMoveSpeed","STOP","_moveSpeed","stopSpeed","NORMAL","normalSpeed","FAST","fastSpeed","move","angle","radiansToDegrees","Math","atan2","y","x","clone","multiplyScalar","force","applyForceToCenter","oldPos","getPosition","newPos","add","console","log","setPosition","update","deltaTime"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, PhysicsSystem2D, Vec3, CCInteger, RigidBody2D, SystemEventType, EventTouch, misc, Vec2 } from 'cc';\nimport { SpeedType ,instance, JoystickDataType} from './Joystick';\nconst { ccclass, property } = _decorator;\n\nPhysicsSystem2D.instance.enable = true;\n\n@ccclass('Player')\nexport class Player extends Component {\n    @property({\n        displayName: \"刚体模式\",\n        tooltip: \"不会立即停止\",\n    })\n    rigidbody = false;\n\n    // from joystick\n    @property({\n        displayName: \"Move Dir\",\n        tooltip: \"移动方向\",\n    })\n    moveDir = new Vec3(0, 1, 0);\n\n    @property({\n        tooltip: \"速度级别\",\n    })\n    _speedType: SpeedType = SpeedType.STOP;\n\n    // from self\n    @property({\n        type: CCInteger,\n        tooltip: \"移动速度\",\n    })\n    _moveSpeed = 0;\n\n    @property({\n        type: CCInteger,\n        tooltip: \"停止时速度\",\n    })\n    stopSpeed = 0;\n\n    @property({\n        type: CCInteger,\n        tooltip: \"正常速度\",\n    })\n    normalSpeed = 100;\n\n    @property({\n        type: CCInteger,\n        tooltip: \"最快速度\",\n    })\n    fastSpeed = 200;\n\n    _body: RigidBody2D | null = null;\n\n    onLoad() {\n        if (this.rigidbody) {\n            this._body = this.node.getComponent(RigidBody2D);\n        }\n\n        instance.on(SystemEventType.TOUCH_START, this.onTouchStart, this);\n        instance.on(SystemEventType.TOUCH_MOVE, this.onTouchMove, this);\n        instance.on(SystemEventType.TOUCH_END, this.onTouchEnd, this);\n    }\n\n    onTouchStart() { }\n\n    onTouchMove(event: EventTouch, data: JoystickDataType) {\n        this._speedType = data.speedType;\n        this.moveDir = data.moveVec;\n\n        this.onSetMoveSpeed(this._speedType);\n    }\n\n    onTouchEnd(event: EventTouch, data: JoystickDataType) {\n        this._speedType = data.speedType;\n\n        this.onSetMoveSpeed(this._speedType);\n    }\n\n    /**\n     * set moveSpeed by SpeedType\n     * @param speedType\n     */\n    onSetMoveSpeed(speedType: SpeedType) {\n        switch (speedType) {\n            case SpeedType.STOP:\n                this._moveSpeed = this.stopSpeed;\n                break;\n            case SpeedType.NORMAL:\n                this._moveSpeed = this.normalSpeed;\n                break;\n            case SpeedType.FAST:\n                this._moveSpeed = this.fastSpeed;\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * 移动\n     */\n    move() {\n        this.node.angle =\n            misc.radiansToDegrees(Math.atan2(this.moveDir.y, this.moveDir.x)) - 90;\n\n        if (this.rigidbody && this._body) {\n            const moveVec = this.moveDir.clone().multiplyScalar(this._moveSpeed / 20);\n            const force = new Vec2(moveVec.x, moveVec.y);\n            this._body.applyForceToCenter(force, true);\n        } else {\n            const oldPos = this.node.getPosition();\n            const newPos = oldPos.add(\n                // fps: 60\n                this.moveDir.clone().multiplyScalar(this._moveSpeed / 60)\n            );\n            console.log(this._moveSpeed / 60);\n            this.node.setPosition(newPos);\n\n            console.log(newPos);\n        }\n    }\n\n    update(deltaTime: number) {\n        if (this._speedType !== SpeedType.STOP) {\n            this.move();\n        }\n    }\n\n}\n\n"]}