{"version":3,"sources":["file:///Users/backup/SnowyDay/SnowyDay/assets/Script/MusicBar.ts"],"names":["_decorator","Component","Node","tween","v3","ccclass","property","MusicBar","onLoad","numNode","indexNode","tweenMove","stop","line","to","position","call","start","listNode","children","updateNodePos","update","deltaTime","linePosX","x","checkingNode","isChecking","nodePosX","checking","y","mainGame","emit","soundPlayer","length"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,E,OAAAA,E;;;;;;;OACvC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;0BAGjBO,Q,WADZF,OAAO,CAAC,UAAD,C,UAGHC,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,UAGRI,QAAQ,CAACJ,IAAD,C,oCARb,MACaK,QADb,SAC8BN,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,2CAcjB,IAdiB;;AAAA;AAAA;;AAiBpCO,QAAAA,MAAM,GAAG;AACL,eAAKC,OAAL,GAAe,CAAf;AACA,eAAKC,SAAL,GAAiB,CAAC,CAAlB;AACA,eAAKC,SAAL,IAAkB,KAAKA,SAAL,CAAeC,IAAf,EAAlB;AACA,eAAKD,SAAL,GAAiB,KAAKA,SAAL,GAAiBR,KAAK,CAAC,KAAKU,IAAN,CAAL,CAC7BC,EAD6B,CAC1B,EAD0B,EACtB;AAAEC,YAAAA,QAAQ,EAAEX,EAAE,CAAC,CAAC,KAAF,EAAS,CAAT,EAAY,CAAZ;AAAd,WADsB,EAE7BY,IAF6B,CAExB,MAAM;AACR,iBAAKL,SAAL,GAAiB,IAAjB;AACH,WAJ6B,EAK7BM,KAL6B,EAAlC;AAOA,eAAKC,QAAL,GAAgB,KAAKL,IAAL,CAAUM,QAA1B;AACA,eAAKC,aAAL;AACH;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,gBAAMC,QAAQ,GAAG,KAAKV,IAAL,CAAUE,QAAV,CAAmBS,CAApC;AACA,gBAAMC,YAAY,GAAG,KAAKP,QAAL,CAAc,KAAKR,SAAnB,CAArB;;AACA,cAAIe,YAAJ,EAAkB;AACdA,YAAAA,YAAY,CAACC,UAAb,GAA0B,IAA1B;AACA,gBAAIH,QAAQ,IAAK,KAAKI,QAAL,GAAgB,CAAjC,EAAqC,KAAKC,QAAL,CAAcH,YAAd;AACxC;AACJ;;AAEDG,QAAAA,QAAQ,CAACH,YAAD,EAAe;AACnB,cAAIA,YAAY,CAACC,UAAjB,EAA6B;AAEzB,gBAAID,YAAY,CAACV,QAAb,CAAsBc,CAAtB,IAA2B,EAA/B,EAAmC;AAC/B,mBAAKC,QAAL,CAAcC,IAAd,CAAmB,MAAnB,EAA0B,CAA1B;AACA,mBAAKC,WAAL,CAAiBD,IAAjB,CAAsB,MAAtB,EAA6B,MAA7B;AACH;;AACD,gBAAIN,YAAY,CAACV,QAAb,CAAsBc,CAAtB,IAA2B,CAAC,EAAhC,EAAoC;AAChC,mBAAKC,QAAL,CAAcC,IAAd,CAAmB,MAAnB,EAA0B,CAA1B;AACA,mBAAKC,WAAL,CAAiBD,IAAjB,CAAsB,MAAtB,EAA6B,KAA7B;AACH;;AAEDN,YAAAA,YAAY,CAACC,UAAb,GAA0B,KAA1B;AACA,iBAAKN,aAAL;AACH;AAEJ;;AACDA,QAAAA,aAAa,GAAG;AACZ,cAAI,KAAKV,SAAL,GAAiB,KAAKQ,QAAL,CAAce,MAAnC,EAA2C;AACvC,iBAAKvB,SAAL;AACA,iBAAKiB,QAAL,GAAgB,CAAE,KAAKT,QAAL,CAAc,KAAKR,SAAnB,EAA8BK,QAA9B,CAAuCS,CAAzC,GAA8C,GAA9D;AACH;AAEJ;;AAhEmC,O","sourcesContent":["\nimport { _decorator, Component, Node, tween, v3, BoxCollider2D, Contact2DType, instantiate, Vec3 } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MusicBar')\nexport class MusicBar extends Component {\n\n    @property(Node)\n    line: Node;\n    @property(Node)\n    mainGame: Node;\n\n    @property(Node)\n    soundPlayer: Node;\n\n    tweenMove: any;\n    numNode: number;\n    listNode: Node[];\n    indexNode: number;\n    isCheck: boolean = true;\n    nodePosX: number;\n\n    onLoad() {\n        this.numNode = 0;\n        this.indexNode = -1;\n        this.tweenMove && this.tweenMove.stop();\n        this.tweenMove = this.tweenMove = tween(this.line)\n            .to(50, { position: v3(-10000, 0, 0) })\n            .call(() => {\n                this.tweenMove = null;\n            })\n            .start();\n\n        this.listNode = this.line.children;\n        this.updateNodePos();\n    }\n\n    update(deltaTime: number) {\n        const linePosX = this.line.position.x;\n        const checkingNode = this.listNode[this.indexNode] as any;\n        if (checkingNode) {\n            checkingNode.isChecking = true;\n            if (linePosX <= (this.nodePosX + 5)) this.checking(checkingNode);\n        }\n    }\n\n    checking(checkingNode) {\n        if (checkingNode.isChecking) {\n\n            if (checkingNode.position.y == 22) {\n                this.mainGame.emit('FIRE',2);\n                this.soundPlayer.emit(\"PLAY\",'High')\n            }\n            if (checkingNode.position.y == -22) {\n                this.mainGame.emit('FIRE',1);\n                this.soundPlayer.emit(\"PLAY\",'Low')\n            }\n\n            checkingNode.isChecking = false;\n            this.updateNodePos();\n        }\n\n    }\n    updateNodePos() {\n        if (this.indexNode < this.listNode.length) {\n            this.indexNode++;\n            this.nodePosX = -(this.listNode[this.indexNode].position.x) - 100;\n        }\n\n    }\n}\n"]}